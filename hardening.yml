---
- name: Hardenin of all instances
  hosts: web
  vars:
  - deploy_password: ''
  - public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  tasks:
  - name: Update APT package cache
    apt: update_cache=yes

  - name: Update APT package cache
    apt: update_cache=yes

  - name: Upgrade APT to the lastest packages
    apt: upgrade=safe

  - name: Install sudo
    apt: name=sudo state=installed

  - name: Install mosh
    apt: name=mosh state=installed

  - name: Install vim
    apt: name=vim state=installed

  - name: Install fail2ban
    apt: name=fail2ban state=installed

  - name: Add deployment user
    user: name=deploy password='{{ deploy_password }}'

  - name: Add authorized deploy key
    authorized_key: user=deploy key='{{ public_key }}'

  - name: Remove sudo group rights
    lineinfile: dest=/etc/sudoers regexp="^%sudo" state=absent

  - name: Add deploy user to sudoers
    lineinfile: "dest=/etc/sudoers regexp='deploy ALL' line='deploy ALL=(ALL) NOPASSWD: ALL' state=present"

  - name: Update SSH configuration to be more secure.
    lineinfile:
      dest: /etc/ssh/sshd_config 
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
    with_items:
      - regexp: "^PasswordAuthentication"
        line: "PasswordAuthentication no"
      - regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
      - regexp: "^Port"
        line: "Port 22"
    notify: restart ssh

  - name: Install unattended-upgrades
    apt: name=unattended-upgrades state=present

  # - name: Adjust APT update intervals
  #   action: copy src=config/apt_periodic dest=/etc/apt/apt.conf.d/10periodic
  #
  # - name: Make sure unattended-upgrades only installs from $ubuntu_release-security
  #   action: lineinfile dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp="$ubuntu_release-updates" state=absent
  #
  # - name: Copy debconf selections so that Postfix can configure itself non-interactively
  #   copy: src=config/postfix_selections  dest=/tmp/postfix_selections
  #
  # - name: Set up Postfix to relay mail
  #   action: command debconf-set-selections /tmp/postfix_selections

  # - name: Install logwatch
  #   action: apt name=logwatch state=installed
  #
  # - name: Make logwatch mail $logwatch_email daily
  #   action: lineinfile dest=/etc/cron.daily/00logwatch regexp="^/usr/sbin/logwatch" line="/usr/sbin/logwatch --output mail --mailto $logwatch_email --detail high" state=present create=yes
  
  - name: Install firewall - ufw
    apt: name=ufw state=installed
  
  - name: Open ports on firewall - ufw
    shell: "ufw allow {{ item }}"
    with_items:
      - 22/tcp
      - 80/tcp
   
  - name: Enable firewall - ufw
    shell: echo 'y' | ufw enable

  handlers:
  - name: restart ssh
    service: name=ssh state=restarted

